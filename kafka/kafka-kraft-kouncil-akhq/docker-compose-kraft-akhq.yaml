version: "3.8"
services:
  kafka:
    container_name: kafka
    hostname: kafka
    restart: always
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,RMOFF_DOCKER_HACK://kafka:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,RMOFF_DOCKER_HACK:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,RMOFF_DOCKER_HACK://kafka:9094
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  akhq:
    container_name: akhq
    image: tchiotludo/akhq
    restart: always
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9094"
    ports:
      - 9080:8080
    links:
      - kafka

  kouncil:
    container_name: kouncil
    image: consdata/kouncil:latest
    restart: always
    links:
      - kafka
    depends_on:
      - kafka
    environment:
      bootstrapServers: kafka:9094
      BOOTSTRAPSERVERS: kafka:9094
      BOOTSTRAP_SERVERS: kafka:9094
    ports:
      - 9888:8080


